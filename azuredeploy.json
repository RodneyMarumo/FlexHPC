{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"vmSku": {
			"defaultValue": "Standard_H16r",
			"allowedValues": [
				"Standard_H16r",
				"Standard_H16mr",
				"Standard_NC6",
				"Standard_NC12",
				"Standard_NC24",
				"Standard_NC24r",
				"Standard_A8",
				"Standard_A9",
				"Basic_A4",
				"DS5_v2",
				"DS14_v2",
				"DS15_v2"
			],
			"type": "String",
			"metadata": {
				"description": "Which machine type would you like to deploy to? Not all VMs are available in all regions"
			}
		},		
		"instanceCount": {
			"maxValue": 100,
			"type": "Int",
			"metadata": {
				"description": "Number of VM instances (100 or less)."
			}
		},
		"adminUsername": {
			"type": "String",
			"metadata": {
				"description": "Admin username on all VMs."
			}
		},
		"adminPassword": {
			"type": "SecureString",
			"metadata": {
				"description": "Admin password on all VMs."
			}
		}
	},
	"variables": {
		"namingInfix": "flex",
		"longNamingInfix": "flex",
		"HeadNodeName": "[concat(variables('longNamingInfix'),'headnode')]",
		"HeadNodeIPConfigName": "[concat(variables('HeadNodeName'), 'ipconfig')]",
		"HeadNodeNicName": "[concat(variables('HeadNodeName'), 'nic')]",
		"addressPrefix": "10.0.0.0/16",
		"subnetPrefix": "10.0.0.0/24",
		"virtualNetworkName": "[concat(variables('namingInfix'), 'vnet')]",
		"subnetName": "[concat(variables('namingInfix'), 'subnet')]",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
		"publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
		"publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
		"nicName": "[concat(variables('namingInfix'), 'nic')]",
		"ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
		"scriptUrl": "https://raw.githubusercontent.com/mkiernan/FlexHPC/master/",
		"cnSetupScript": "cn-setup.sh",
		"hnSetupScript": "hn-setup.sh",
		"osType": {
			"publisher": "OpenLogic",
			"offer": "CentOS-HPC",
			"sku": "7.1",
			"version": "latest"
		},
		"imageReference": "[variables('osType')]",
		"vmssScript": {
			"scriptToDownload": [
				"[concat(variables('scriptUrl'), 'cn-setup.sh')]"
			],
			"commandToExecute": "[concat('bash ', 'cn-setup.sh ',parameters('adminUsername')) ]",
		},
		"vmScripts": {
			"scriptsToDownload": [
				"[concat(variables('scriptUrl'), 'cn-setup.sh')]",
				"[concat(variables('scriptUrl'), 'hn-setup.sh')]",
				"[concat(variables('scriptUrl'), 'pingpong.sh')]",
				"[concat(variables('scriptUrl'), 'clusRun.sh')]"
			],
            "commandToExecute": "",
		},
		"computeApiVersion": "2016-04-30-preview",
		"networkApiVersion": "2016-06-01",
		"storageApiVersion": "2015-06-15"
	},
	"resources": [{
		"type": "Microsoft.Network/virtualNetworks",
		"name": "[variables('virtualNetworkName')]",
		"apiVersion": "[variables('networkApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"addressSpace": {
				"addressPrefixes": [
					"[variables('addressPrefix')]"
				]
			},
			"subnets": [{
				"name": "[variables('subnetName')]",
				"properties": {
					"addressPrefix": "[variables('subnetPrefix')]"
				}
			}]
		}
	}, {
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[variables('publicIPAddressName')]",
		"apiVersion": "[variables('networkApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"publicIPAllocationMethod": "Dynamic",
			"dnsSettings": {
				"domainNameLabel": "[variables('longNamingInfix')]"
			}
		}
	}, {
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[variables('HeadNodeNicName')]",
		"apiVersion": "[variables('networkApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"ipConfigurations": [{
				"name": "[variables('HeadNodeIPConfigName')]",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"publicIPAddress": {
						"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
					},
					"subnet": {
						"id": "[variables('subnetRef')]"
					}
				}
			}]
		},
		"dependsOn": [
			"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
			"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
		]
	}, {
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[variables('HeadNodeName')]",
		"apiVersion": "[variables('computeApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"hardwareProfile": {
				"vmSize": "[parameters('vmSku')]"
			},
			"osProfile": {
				"computerName": "[variables('HeadNodeName')]",
				"adminUsername": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]"
			},
			"storageProfile": {
				"imageReference": "[variables('imageReference')]",
				"osDisk": {
					"caching": "ReadWrite",
					"createOption": "FromImage"
				}
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('HeadNodeNicName'))]"
				}]
			}
		},
		"resources": [{
			"type": "extensions",
			"name": "masterExtension",
			"apiVersion": "[variables('storageApiVersion')]",
		        "location": "[resourceGroup().location]",
			"tags": {
				"displayName": "masterExtension"
			},
			"properties": {
				"publisher": "Microsoft.OSTCExtensions",
				"type": "CustomScriptForLinux",
				"typeHandlerVersion": "1.5",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": "[variables('vmScripts').scriptsToDownload]",
					"commandToExecute": "[concat('bash ', 'hn-setup.sh ',parameters('adminUsername')) ]",
					"timestamp": 4
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('HeadNodeName'))]"
			]
		}],
		"dependsOn": [
			"[concat('Microsoft.Network/networkInterfaces/', variables('HeadNodeNicName'))]"
		]
	}, {
		"type": "Microsoft.Compute/virtualMachineScaleSets",
		"sku": {
			"name": "[parameters('vmSku')]",
			"tier": "Standard",
			"capacity": "[parameters('instanceCount')]"
		},
		"name": "[variables('namingInfix')]",
		"apiVersion": "[variables('computeApiVersion')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"overprovision": "false",
			"upgradePolicy": {
				"mode": "Manual"
			},
			"virtualMachineProfile": {
				"storageProfile": {
					"osDisk": {
					"caching": "ReadWrite",
					"createOption": "FromImage"
					},
					"imageReference": "[variables('imageReference')]"
				},
				"osProfile": {
					"computerNamePrefix": "[variables('namingInfix')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"networkProfile": {
					"networkInterfaceConfigurations": [{
						"name": "[variables('nicName')]",
						"properties": {
							"primary": "true",
							"ipConfigurations": [{
								"name": "[variables('ipConfigName')]",
								"properties": {
									"subnet": {
										"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
									}
								}
							}]
						}
					}]
				},
				"extensionProfile": {
					"extensions": [
						{
							"name": "installCN",
							"properties": {
								"publisher": "Microsoft.Azure.Extensions",
								"type": "CustomScript",
								"typeHandlerVersion": "2.0",
								"autoUpgradeMinorVersion": true,
								"settings": {
									"fileUris": "[variables('vmssScript').scriptToDownload]",
									"commandToExecute": "[variables('vmssScript').commandToExecute]",
									"timestamp": 12345
								}
							}
						}
					]
				}
			}
		},
		"dependsOn": [
			"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
			"[concat('Microsoft.Compute/virtualMachines/', variables('HeadNodeName'))]"
		]
	}]
}
